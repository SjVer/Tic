# standard file module

Function readfile Takes
	{string} path 
Does
	# reads the contents of a file to a string
	InclC "stdio.h"
	InclC "stdlib.h"
	InclC "errno.h"

	Declare {string} buffer

	EmitC "FILE *USR_f = fopen(USR_path, \"r\");"
	EmitC "if (errno) {"
	EmitC "perror(USR_path);"
	Raise "File could not be read"
	EmitC "}"
	EmitC "fseek(USR_f, 0, SEEK_END);"
	EmitC "long USR_length = ftell(USR_f);"
	EmitC "fseek(USR_f, 0, SEEK_SET);"
	EmitC "/* char * */USR_buffer = (char *) malloc(USR_length + 1);"
	EmitC "USR_buffer[USR_length] = '\\0';"
	EmitC "fread(USR_buffer, 1, USR_length, USR_f);"
	EmitC "fclose(USR_f);"
EndFunction Returning buffer

Function writefile Takes
	{string} path,
	{string} contents
Does
	# writes text to a file
	InclC "stdio.h"
	InclC "stdlib.h"
	InclC "errno.h"

	EmitC "FILE *USR_f;"
	EmitC "USR_f = fopen(USR_path, \"w+\");"
	EmitC "if (USR_f) {"
	EmitC "fputs(USR_contents, USR_f); }"
	EmitC "else {"
	Raise "File could not be written"
	EmitC "}"
	EmitC "fclose(USR_f);"
EndFunction

Function createfile Takes
	{string} path
Does
	# creates a file
	InclC "stdio.h"

	EmitC "FILE *USR_f;"
	EmitC "fopen(USR_path, \"w\");"
	#EmitC "fclose(USR_f);"
EndFunction

Function removefile Takes
	{string} path
Does
	# removes a file
	InclC "stdio.h"

	EmitC "int USR_ret;"
	EmitC "USR_ret = remove(USR_path);"
	EmitC "if (USR_ret) {"
	Raise "Could not remove file"
	EmitC "}"
EndFunction

Function checkfile Takes
	{string} path
Does
	# checks if a file exists
	InclC "stdio.h"
	InclC "unistd.h"

	Declare {bool} exists

	EmitC "if( access(USR_path, F_OK ) == 0 ) {"
	EmitC "USR_exists = true;"
	EmitC "}else{"
	EmitC "USR_exists = false;}"
EndFunction Returning exists